import React, { useEffect, useState, useContext } from 'react';
import { AuthContext } from './store/AuthContext';

// ‚öôÔ∏è –ö–æ–Ω—Ç–µ–∫—Å—Ç, –∏–∑ –∫–æ—Ç–æ—Ä–æ–≥–æ –±–µ—Ä—ë—Ç—Å—è —Ä–æ–ª—å

const PUBLIC_VAPID_KEY = 'BNzjcHZGKpcIGvMLbuAxxLx7nDDduh17XkP37wB3gW-mShK-rinrnTHA3MCbS3_kaGM7gWguuzBA9nizvQKB-70';

// üîê –ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ –∫–ª—é—á–∞
function urlBase64ToUint8Array(base64String) {
  const padding = '='.repeat((4 - base64String.length % 4) % 4);
  const base64 = (base64String + padding)
    .replace(/-/g, '+')
    .replace(/_/g, '/');

  const rawData = atob(base64);
  const outputArray = new Uint8Array(rawData.length);

  for (let i = 0; i < rawData.length; ++i) {
    outputArray[i] = rawData.charCodeAt(i);
  }
  return outputArray;
}

// üì¶ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ Push
async function subscribeUser() {
  if ('serviceWorker' in navigator && 'PushManager' in window) {
    const reg = await navigator.serviceWorker.ready;
    return await reg.pushManager.subscribe({
      userVisibleOnly: true,
      applicationServerKey: urlBase64ToUint8Array(PUBLIC_VAPID_KEY),
    });
  } else {
    throw new Error('Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è –≤ —ç—Ç–æ–º –±—Ä–∞—É–∑–µ—Ä–µ');
  }
}

const PushSender = () => {
  const [message, setMessage] = useState('');
  const [status, setStatus] = useState('');
  const { userRole } = useContext(AuthContext); // üé≠ –ü–æ–ª—É—á–∞–µ–º —Ä–æ–ª—å –∏–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

 const handleSend = async () => {
  try {
    setStatus('üîÑ –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ push...');
    const subscription = await subscribeUser();

    // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –≤ localStorage
    localStorage.setItem("pushSubscription", JSON.stringify(subscription));

    const isAdmin = userRole === 'admin';

    setStatus('üì§ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è...');
    const res = await fetch('https://chechnya-product.ru/api/push/send', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ subscription, message, isAdmin }),
    });

    if (res.ok) {
      setStatus('‚úÖ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!');
    } else {
      setStatus('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è');
    }
  } catch (err) {
    console.error(err);
    setStatus('‚ùå –û—à–∏–±–∫–∞: ' + err.message);
  }
};


  // üî• –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ä—É—é –ø–æ–¥–ø–∏—Å–∫—É –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏
  useEffect(() => {
    navigator.serviceWorker.ready
      .then(reg => reg.pushManager.getSubscription())
      .then(sub => sub?.unsubscribe())
      .then(() => console.log('‚úÖ –°—Ç–∞—Ä–∞—è –ø–æ–¥–ø–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω–∞'));
  }, []);

  return (
    <div style={{ padding: 20, fontFamily: 'sans-serif' }}>
      <h2>Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ</h2>
      <input
        type="text"
        placeholder="–¢–µ–∫—Å—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è"
        value={message}
        onChange={(e) => setMessage(e.target.value)}
        style={{ width: '300px', padding: '8px', marginRight: '10px' }}
      />
      <button onClick={handleSend} style={{ padding: '8px 16px' }}>
        üîî –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å Push
      </button>
      <div style={{ marginTop: 10 }}>{status}</div>
    </div>
  );
};

export default PushSender;
