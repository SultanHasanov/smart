import React, { useContext, useState, useEffect } from "react";
import { Input, Button, Form, message, notification } from "antd";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { AuthContext } from "../store/AuthContext";
const IS_AUTH_DISABLED = import.meta.env.VITE_AUTH_DISABLED === "true";

const Login = () => {
  const [loading, setLoading] = useState(false);
  const [deferredPrompt, setDeferredPrompt] = useState(null); // –î–ª—è –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  const [showInstallButton, setShowInstallButton] = useState(false); // –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  const { isAuthenticated, login, logout } = useContext(AuthContext);
  const navigate = useNavigate();

  const handleLogin = async (values) => {
    // –ï—Å–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –æ—Ç–∫–ª—é—á–µ–Ω–∞, –∏–º–∏—Ç–∏—Ä—É–µ–º —É—Å–ø–µ—à–Ω—ã–π –ª–æ–≥–∏–Ω. –£–¥–∞–ª–∏—Ç—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ!
    if (IS_AUTH_DISABLED) {
      login("fake-token"); // üîí –ò–º–∏—Ç–∏—Ä—É–µ–º –ª–æ–≥–∏–Ω
      message.success("–ò–º–∏—Ç–∞—Ü–∏—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —É—Å–ø–µ—à–Ω–∞!");
      navigate("/favorites");
      return;
    }

    setLoading(true);
    try {
      const response = await axios.post(
        "https://chechnya-product.ru/api/login",
        {
          identifier: values.username,
          password: values.password,
        }
      );
      if (response.data.data.token) {
        login(response.data.data.token); // ‚úÖ –≥–ª–æ–±–∞–ª—å–Ω–æ –æ–±–Ω–æ–≤–∏—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        message.success("–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!");
        navigate("/favorites");
      }
    } catch (error) {
      message.error("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å.");
    } finally {
      setLoading(false);
    }
  };

  const handleLogout = () => {
    logout(); // ‚úÖ —É–¥–∞–ª–∏—Ç —Ç–æ–∫–µ–Ω –∏ –æ–±–Ω–æ–≤–∏—Ç –≥–ª–æ–±–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    message.success("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–∏—Å—Ç–µ–º—ã.");
  };

  const handleInstall = () => {
    if (deferredPrompt) {
      deferredPrompt.prompt(); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
      deferredPrompt.userChoice
        .then((choiceResult) => {
          if (choiceResult.outcome === "accepted") {
            notification.success({
              message: "–£—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
              description: "–í–∞—à–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!",
            });
          } else {
            notification.error({
              message: "–û—Ç–∫–∞–∑ –æ—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏",
              description: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–∫–ª–æ–Ω–∏–ª —É—Å—Ç–∞–Ω–æ–≤–∫—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.",
            });
          }
          setDeferredPrompt(null);
          setShowInstallButton(false);
        });
    }
  };

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–±—ã—Ç–∏—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
  useEffect(() => {
    const beforeInstallPromptHandler = (e) => {
      e.preventDefault(); // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ –±—Ä–∞—É–∑–µ—Ä–∞
      setDeferredPrompt(e); // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –æ—Ç–ª–æ–∂–µ–Ω–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ
      setShowInstallButton(true); // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
    };

    window.addEventListener("beforeinstallprompt", beforeInstallPromptHandler);

    // –û—á–∏—Å—Ç–∫–∞ –ø–æ—Å–ª–µ –¥–µ–º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
    return () => {
      window.removeEventListener("beforeinstallprompt", beforeInstallPromptHandler);
    };
  }, []);

  return (
    <div className="login-container">
      {!isAuthenticated ? (
        <Form
          name="login"
          onFinish={handleLogin}
          initialValues={{
            username: "",
            password: "",
          }}
        >
          <h2>–ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</h2>
          <Form.Item
            name="username"
            rules={[{ required: true, message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω!" }]}
          >
            <Input size="large" placeholder="–õ–æ–≥–∏–Ω" />
          </Form.Item>

          <Form.Item
            name="password"
            rules={[{ required: true, message: "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å!" }]}
          >
            <Input.Password size="large" placeholder="–ü–∞—Ä–æ–ª—å" />
          </Form.Item>

          <Form.Item>
            <Button size="large" type="primary" htmlType="submit" loading={loading} block>
              –í–æ–π—Ç–∏
            </Button>
          </Form.Item>
        </Form>
      ) : (
        <div>
          <h2>–í—ã —É—Å–ø–µ—à–Ω–æ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã</h2>
          <Button size="large" type="primary" danger onClick={handleLogout} block>
            –í—ã–π—Ç–∏
          </Button>
        </div>
      )}

      {/* –ö–Ω–æ–ø–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ */}
      {showInstallButton && !window.matchMedia('(display-mode: standalone)').matches && (
        <Button
          type="primary"
          size="large"
          onClick={handleInstall}
          style={{ position: "fixed", bottom: "20px", right: "20px", zIndex: 1000 }}
        >
          –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
        </Button>
      )}
    </div>
  );
};

export default Login;
